package com.example.baishihuitong;
import java.text.DateFormat;
import java.text.Format;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import com.baishi.db.cn.PacketSql;
import com.baishi.db.cn.Packets;
import android.app.Activity;
import android.app.AlertDialog;
import android.app.DatePickerDialog;
import android.app.AlertDialog.Builder;
import android.app.DatePickerDialog.OnDateSetListener;
import android.content.DialogInterface;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.util.Log;
import android.util.Xml;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.view.Window;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.AdapterView.OnItemSelectedListener;
import android.widget.BaseAdapter;
import android.widget.Button;
import android.widget.DatePicker;
import android.widget.ListView;
import android.widget.Spinner;
import android.widget.TextView;
import android.widget.Toast;

public class SearchrecrodActivity extends Activity implements OnItemClickListener{
	Button search;
	Spinner spinner;
	ListView listView;
	String str;
	public String[] date = { "今天", "昨天", "前天", "任意一天" };
	PacketSql db;
	List<Packets> list;// 实体类的各个实体
	BaseAdapter adapter;
	public DatePickerDialog d;
	String times="";
	Packets dataupload;
	private static final String URL_INTENT = "http://opws.yundasys.com:9900/ws/ws.jsp";
	private PacketSql mImpDataUpload;
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		setContentView(R.layout.activity_searchrecrod);
		init();
		spinner.setAdapter(new BaseAdapter() {
			@Override
			public View getView(int position, View convertView, ViewGroup parent) {
				// TODO Auto-generated method stub
				convertView = LayoutInflater.from(SearchrecrodActivity.this).inflate(R.layout.date, null);
				((TextView) convertView.findViewById(R.id.text)).setText(date[position]);
				return convertView;
			}

			@Override
			public long getItemId(int position) {
				return position;
			}

			@Override
			public Object getItem(int position) {
				return date[position];
			}

			@Override
			public int getCount() {
				// TODO Auto-generated method stub
				return date.length;
			}
		});
		spinner.setOnItemSelectedListener(new OnItemSelectedListener() {
			@Override
			public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
				search.setTag(position);// 传给search所点击的那个数据
			}

			@Override
			public void onNothingSelected(AdapterView<?> parent) {
			}
		});

		search.setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View v) {
				int position = (int) v.getTag();
				switch (position) {
				case 0:
					list=db.QueryProfession(getDates());
					Log.i("setOnClickListener", list.size()+"");
					adapter.notifyDataSetChanged();
					break;
				case 1:
					list=db.QueryProfession(yesTerDay());
					Log.i("setOnClickListener", list.size()+"");
					adapter.notifyDataSetChanged();
					break;
				case 2:
					list=db.QueryProfession(beforeYesterDay());
					Log.i("setOnClickListener", list.size()+"");
					adapter.notifyDataSetChanged();
					break;
				case 3:
					Calendar c = Calendar.getInstance();
                    c.setTime(new Date());
					if (d == null) {
						d = new DatePickerDialog(SearchrecrodActivity.this, new OnDateSetListener() {
							@Override
							public void onDateSet(DatePicker view, int year, int monthOfYear, int dayOfMonth) {
								Calendar calendar = Calendar.getInstance();
								calendar.set(year, monthOfYear, dayOfMonth);
								long time = calendar.getTimeInMillis() ;
								Date date=new Date(time);
								SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
									times = format.format(date);
									Log.e("tag", times+"");
									list=db.QueryProfession(times);
									adapter.notifyDataSetChanged();
							}
						}, c.get(Calendar.YEAR), c.get(Calendar.MONTH), c.get(Calendar.DAY_OF_MONTH));
					}
					d.setButton(DatePickerDialog.BUTTON_POSITIVE, "确认", new DialogInterface.OnClickListener() {
						@Override
						public void onClick(DialogInterface dialog, int which) {
							
							
						}
					});
					d.show();
					break;

				default:
					break;
				}
				System.out.println(list.size());
			}
		});
		listView.setAdapter(adapter = new BaseAdapter() {

			@Override
			public View getView(int position, View convertView, ViewGroup parent) {
				ViewHolder holder = null;
				if (convertView == null) {
					holder = new ViewHolder();
					convertView = LayoutInflater.from(SearchrecrodActivity.this).inflate(R.layout.dateitem, null);
					holder.yundanhao = (TextView) convertView.findViewById(R.id.yundanhao);
					convertView.setTag(holder);
				} else {
					holder = (ViewHolder) convertView.getTag();
				}
				Packets dataupload = list.get(position);
				holder.yundanhao.setText(dataupload.getWaybillnumber());
				return convertView;
			}

			@Override
			public long getItemId(int position) {
				// TODO Auto-generated method stub
				return position;
			}

			@Override
			public Object getItem(int position) {
				// TODO Auto-generated method stub
				return list.size();
			}

			@Override
			public int getCount() {
				// TODO Auto-generated method stub
				return list.size();
			}

		});
	}

	public class ViewHolder {
		TextView yiguo;
		TextView yundanhao;
	}
	public void init() {
		db = new PacketSql(this);
		spinner = (Spinner) findViewById(R.id.spinner);
		search = (Button) findViewById(R.id.search);
		listView = (ListView) findViewById(R.id.dlistview);
		list=db.QueryProfession(getDates());
		listView.setOnItemClickListener(this);
		mImpDataUpload=new PacketSql(this);
	}
	// 获取当前日期
	public String getDates() {
		Date date = new Date();
		SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
		String time = format.format(date);
		return time;
	}

	// 获取昨天日期
	public String yesTerDay() {
		Format f = new SimpleDateFormat("yyyy-MM-dd");
		Calendar c = Calendar.getInstance();
		System.out.println("昨天:" + f.format(c.getTime()));
		c.add(Calendar.DAY_OF_MONTH, -1);
		String time = f.format(c.getTime());
		return time;
	}

	// 获取前天日期
	public String beforeYesterDay() {
		Format f = new SimpleDateFormat("yyyy-MM-dd");
		Calendar c = Calendar.getInstance();
		System.out.println("前天:" + f.format(c.getTime()));
		c.add(Calendar.DAY_OF_MONTH, -2);
		String time = f.format(c.getTime());
		return time;
	}
	
	@Override
	public void onItemClick(AdapterView<?> parent, View view, int position,
			long id) {
				AlertDialog( position);
		
	}	
	public void AlertDialog(final int position) {
		LayoutInflater inflater=LayoutInflater.from(SearchrecrodActivity.this);
		View view =	inflater.inflate(R.layout.view, null);
		TextView textView1=(TextView) view.findViewById(R.id.textView2);
		TextView textView2=(TextView) view.findViewById(R.id.textView4);
		TextView textView3=(TextView) view.findViewById(R.id.textView6);
		TextView textView4=(TextView) view.findViewById(R.id.textView10);
		TextView textView5=(TextView) view.findViewById(R.id.textView11);
		TextView textView6=(TextView) view.findViewById(R.id.textView19);
		textView1.setText(list.get(position).getLoginName());
		textView2.setText(list.get(position).getWorkorder());
		textView6.setText(list.get(position).getDqstation());
		textView3.setText(list.get(position).getWaybillnumber());
		textView4.setText(list.get(position).getScanTime());
		textView5.setText(list.get(position).getNextname());
		Builder builder = new AlertDialog.Builder(SearchrecrodActivity.this);
		builder.setView(view);
		builder.setTitle("运单详情");	
		builder.setIcon(R.drawable.baishi1);
		builder.setNegativeButton("关闭", null);
		builder.show();
	}
	// 获取当前时间
	public String getDate() {
		Date date = new Date();
		DateFormat format = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
		String time = format.format(date);
		return time;
	}
}
